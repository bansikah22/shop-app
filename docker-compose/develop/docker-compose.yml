version: '3.7'

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - "traefik.enable=true"
    networks:
      - shop-net

  frontend:
    image: bansikah/shop-frontend:1.2.1
    environment:
      - REACT_APP_API_URL
    volumes:
      - ./env/.env:/usr/share/nginx/html/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`shop-app-dev.local`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - shop-net
    depends_on:
      - backend

  backend:
    image: bansikah/shop-backend:1.2.0
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`shop-app-dev.local`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    networks:
      - shop-net
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - shop-net

networks:
  shop-net:
    driver: bridge

volumes:
  postgres-data:
