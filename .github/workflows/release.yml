name: Release Pipeline

on:
  release:
    types:
      - created  # Trigger when a new release is created

jobs:
  # Job to run tests and build the backend and frontend
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 using AdoptOpenJDK (correct distribution)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Set JAVA_HOME environment variable
      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java.outputs.java-home }}" >> $GITHUB_ENV

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install build tools
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y make wget apt-transport-https gnupg lsb-release

      # Install frontend dependencies and set up environment
      - name: Install frontend dependencies
        run: make frontend-install

      # Install hadolint for Dockerfile linting
      - name: Install hadolint
        run: |
          sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          sudo chmod +x /usr/local/bin/hadolint

      # Run Dockerfile lint checks
      - name: Run Dockerfile lint checks
        run: make lint

      # Run tests (frontend and backend)
      - name: Run tests
        run: make test

      # Build Maven package for backend
      - name: Build Maven package
        run: |
          cd shop-backend
          mvn clean package -DskipTests
          cd ..

  # Job to handle release-specific steps (tagging and pushing Docker images)
  release:
    runs-on: ubuntu-latest
    needs: build_and_test  # This job runs after the build_and_test job is complete

    steps:
      # Checkout code again in the release job
      - name: Checkout code
        uses: actions/checkout@v3

      # Tag Docker images with release version
      - name: Tag Docker images with release version
        run: |
          VERSION=${GITHUB_REF##*/}  # Extract release tag
          echo "Tagging Docker images with version $VERSION"
          docker tag bansikah/shop-frontend:latest bansikah/shop-frontend:$VERSION
          docker tag bansikah/shop-backend:latest bansikah/shop-backend:$VERSION

      # Log in to Docker Hub using the Docker Hub token
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: bansikah
          password: ${{ secrets.DOCKER_HUB_TOKEN }}  # Use the Docker Hub token from secrets

      # Push Docker images to Docker Hub
      - name: Push Docker images to Docker Hub
        run: |
          VERSION=${GITHUB_REF##*/}  # Extract release tag
          docker push bansikah/shop-frontend:$VERSION
          docker push bansikah/shop-backend:$VERSION

      # Logout from Docker Hub
      - name: Logout from Docker Hub
        run: docker logout
