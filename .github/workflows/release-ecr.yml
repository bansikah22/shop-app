name: Push Docker Images to Amazon ECR

on:
  release:
    types:
      - created  # Trigger when a new release is created

env:
  AWS_REGION: MY_AWS_REGION                   #  desired region
  ECR_REPOSITORY_FRONTEND: shop-frontend      # Amazon ECR repository for the frontend
  ECR_REPOSITORY_BACKEND: shop-backend        # Amazon ECR repository for the backend

jobs:
  push-to-ecr:
    name: Build and Push Images to ECR
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 for backend
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      # Set up Node.js for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Build the frontend
      - name: Install frontend dependencies and build
        run: make frontend-install

      # Build the backend
      - name: Build Maven package
        run: |
          cd shop-backend
          mvn clean package -DskipTests
          cd ..

      # Capture the release tag
      - name: Get Release Tag
        id: release_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "RELEASE_TAG=$TAG_NAME" >> $GITHUB_ENV
          echo "Captured Release Tag: $TAG_NAME"

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push frontend image
      - name: Build, tag, and push frontend image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.RELEASE_TAG }}
        run: |
          docker build \
            --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ env.IMAGE_TAG }} \
            ./shop-frontend
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ env.IMAGE_TAG }}

      # Build and push backend image
      - name: Build, tag, and push backend image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.RELEASE_TAG }}
        run: |
          docker build \
            -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:${{ env.IMAGE_TAG }} \
            ./shop-backend
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:${{ env.IMAGE_TAG }}
